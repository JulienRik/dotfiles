#!/bin/bash

function add_delta {
  if ! delta --version ; then
	wget https://github.com/dandavison/delta/releases/download/0.11.3/git-delta_0.11.3_amd64.deb
	sudo dpkg -i git-delta*.deb
	rm *.deb
  fi
}

function patch_docker {
    if ! grep psFormat .docker/config.json ; then
        head -n -1 .docker/config.json > .docker/config.json-1
        echo ', "psFormat": "table {{.ID}}\t{{ .Names }}\t{{.Status}}"}' >> .docker/config.json-1
        jq < .docker/config.json-1 > .docker/config.json
        rm .docker/config.json-1
    fi

}

function install_graphite {
    if ! which gt ; then
        git clone https://github.com/screenplaydev/graphite-cli $HOME/.local/lib/graphite-cli
        pushd .local/lib/graphite-cli
        npm install
        npm run build
        chmod a+x dist/src/index.js
        ln -s ~/.local/lib/graphite-cli/dist/src/index.js ~/.local/bin/gt
        popd
    fi
}

function clone_my_repos {
    if [ ! -d "/workspaces/content-service" ] ; then
        pushd /workspaces
        git clone git@github.com:tophatmonocle/content-service
        git clone git@github.com:tophatmonocle/fe-admin
        popd
    fi
}

function checkout_my_branches {
    pushd /workspaces
    for directory in * ; do
        if [ -d "$directory" ]; then
            pushd $directory
            branches=$(git branch -r | grep dusty)
            for remotebranch in $branches ; do
                localbranch=${remotebranch/origin\//}
                git fetch origin $localbranch:$localbranch
                git branch -u $remotebranch $localbranch
                echo hi $branchname
            done
            git checkout main || git checkout master
            popd
        fi
    done
    popd
}


add_delta
patch_docker
install_graphite
clone_my_repos
checkout_my_branches

sudo apt install -y \
    direnv \
    python3-neovim \
    lnav \
    fzf
npm install --global pyright typescript-language-server vim-language-server
